{"version":3,"sources":["context/github/githubContext.js","components/Navbar.js","components/Card.js","context/alert/alertContext.js","components/Search.js","pages/Home.js","pages/Profile.js","pages/About.js","components/Alert/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/githubState.js","App.js","serviceWorker.js","index.js"],"names":["GithubContext","createContext","Navbar","getAuthToken","useContext","className","exact","to","type","onClick","Card","user","src","avatar_url","alt","login","AlertContext","Search","alert","useState","value","setValue","github","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Home","loading","users","map","id","Profile","match","getUser","getRepos","repos","urlName","params","name","useEffect","company","location","bio","blog","html_url","followers","public_repos","public_gists","following","style","width","rel","href","join","About","Alert","role","text","aria-label","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","console","log","axios","get","response","setLoading","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cba4dcb9.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const GithubContext = createContext()\n","import React, { useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { GithubContext } from '../context/github/githubContext'\n\nexport const Navbar = () => {\n  const {getAuthToken} = useContext(GithubContext)\n\n  return (\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg \" >\n      <div className=\"navbar-brand\">\n        Github Поиск\n    </div>\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\n        </li>\n      </ul>\n      <button \n      className=\"btn btn-secondary my-sm-0\" \n      type=\"submit\"\n      onClick={getAuthToken}\n      >GetToken</button>\n    </nav >\n  )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Card = ({ user }) => (\n  <div className=\"card\">\n    <img className=\"card-img-top\" src={user.avatar_url} alt={user.login} />\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{user.login}</h5>\n      <Link className=\"btn btn-primary\" to={'/profile/' + user.login}>Открыть</Link>\n    </div>\n  </div>\n)","import {createContext} from 'react'\n\n\nexport const AlertContext = createContext()","import React, { useContext, useState } from 'react'\nimport { AlertContext } from '../context/alert/alertContext'\nimport { GithubContext } from '../context/github/githubContext'\n\nexport const Search = () => {\n  const alert = useContext(AlertContext)\n  const [value, setValue] = useState('')\n  const github = useContext(GithubContext)\n\n  const onSubmit = event => {\n    if (event.key !== 'Enter') {\n      return\n    }\n\n    github.clearUsers()\n\n    if (value.trim()) {\n      alert.hide()\n      github.search(value.trim())\n    } else {\n      alert.show('Введите данные пользователя!')\n    }\n  }\n  return (\n    <div className=\"form-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Введите ник пользователя\"\n        value={value}\n        onChange={event => setValue(event.target.value)}\n        onKeyPress={onSubmit}\n      />\n    </div>\n  )\n}","import React, { Fragment, useContext } from 'react'\nimport { Card } from '../components/Card'\nimport { Search } from '../components/Search'\nimport { GithubContext } from '../context/github/githubContext'\n\nexport const Home = () => {\n  const { loading, users } = useContext(GithubContext)\n\n\n  return (\n    <Fragment>\n      <Search />\n      <div className=\"row\">\n\n        {loading\n          ? <p className=\"text-center\">Загрузка...</p>\n          : users.map(user => (<div className=\"col-sm-4 mb-4\" key={user.id}>\n            <Card user={user} />\n          </div>))\n        }\n      </div>\n    </Fragment >\n  )\n}","import React, { useContext, useEffect, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { GithubContext } from '../context/github/githubContext'\n\nexport const Profile = ({ match }) => {\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext)\n  const urlName = match.params.name\n\n  useEffect(() => {\n    getUser(urlName)\n    getRepos(urlName)\n    //Следующая строка отключает eslint\n    // eslint-disable-next-line\n  }, [])\n\n  if (loading) {\n    return <p className=\"text-center\">Загрузка...</p>\n  }\n\n  const {\n    name, company, avatar_url,\n    location, bio, blog,\n    login, html_url, followers,\n    public_repos, public_gists,\n    following\n  } = user\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 text-center\">\n              <img\n                src={avatar_url}\n                alt={name}\n                style={{ width: '150px' }}\n              />\n              <h1>{name}</h1>\n              {location && <p>Местоположение: {location}</p>}\n            </div>\n            <div className=\"col\">\n              {\n                bio && <Fragment>\n                  <h3>BIO</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              }\n              <a\n                className=\"btn btn-dark\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={html_url}\n              >Открыть профиль</a>\n\n              <ul>\n                {login && <li><strong>Username:</strong>{login}</li>}\n                {company && <li><strong>Компания:</strong>{company}</li>}\n                {blog && <li><strong>Website:</strong>{blog}</li>}\n              </ul>\n\n              <div className=\"badge badge-primary\">Подписчики: {followers}</div>\n              <div className=\"badge badge-success\">Подписан: {following}</div>\n              <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {repos.join()}\n    </Fragment>\n  )\n}","import React from 'react'\n\nexport const About = () => {\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Информация</h1>\n        <p className=\"lead\">Версия приложения <strong>1.0.0</strong></p>\n      </div>\n    </div>\n  )\n}","import React, { useContext } from 'react'\nimport { AlertContext } from '../../context/alert/alertContext'\n\n\nexport const Alert = () => {\n  const { alert, hide } = useContext(AlertContext)  // это весь оьект, который мы передаем\n\n  if (!alert) return null\n\n  return (\n    <div\n      className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n      role=\"alert\">\n      {alert.text}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  )\n}","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: state => state\n}\n\nexport const alertReducer = (state, action) => {\n const handler = handlers[action.type] || handlers.DEFAULT  // handler - это функция\n\n return handler(state, action)\n}","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\nexport const CLEAR_USERS ='CLEAR_USERS'\nexport const GET_REPOS ='GET_REPOS'\nexport const GET_USER ='GET_USER'\nexport const SEARCH_USERS ='SEARCH_USERS'\n\nexport const SET_LOADING ='SET_LOADING'","import React, { useReducer } from 'react'\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\nimport { AlertContext } from './alertContext'\nimport { alertReducer } from './alertReducer'\n\nexport const AlertState = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, null)\n\n  const hide = () => dispatch({ type: HIDE_ALERT })\n  const show = (text, type = 'secondary') => dispatch({ type: SHOW_ALERT, payload: { type, text } })\n\n  return (\n    <AlertContext.Provider value={{\n      hide, show, alert: state\n    }}>\n      {children}\n    </AlertContext.Provider>\n  )\n}","import { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\"\n\nconst handlers = {\n  [SEARCH_USERS]: (state, { payload }) => ({ ...state, users: payload, loading: false }),\n  [GET_REPOS]: (state, { payload }) => ({ ...state, repos: payload, loading: false }),\n  [GET_USER]: (state, { payload }) => ({ ...state, user: payload, loading: false }),\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\n  DEFAULT: state => state\n}\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT\n\n  return handler(state, action)\n}","import React, { useReducer } from 'react'\nimport axios from 'axios'\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types'\nimport { GithubContext } from './githubContext'\nimport { githubReducer } from './githubReducer'\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\n\nconst withCreds = url => {\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\nexport const GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  }\n  const [state, dispatch] = useReducer(githubReducer, initialState)\n\n  const getAuthToken = async () =>{\n    console.log(\"+++.\")\n    const response  = await axios.get(\n     `https://github.com/login/oauth/authorize?client_id=${CLIENT_ID}&scope=user`\n    )\n    console.log(response)\n  }\n\n  const search = async value => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\n    )\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items\n    })\n  }\n\n  const getUser = async name => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}?`)\n    )\n\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    })\n  }\n\n  const getRepos = async name => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\n    )\n\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data\n    })\n  }\n\n  const clearUsers = () => {\n    dispatch({ type: CLEAR_USERS })\n  }\n\n  const setLoading = () => {\n    dispatch({ type: SET_LOADING })\n  }\n\n  const { user, users, repos, loading } = state\n\n  return (\n    <GithubContext.Provider value={{\n      setLoading, search, getUser, getRepos, clearUsers, getAuthToken,\n      user, users, repos, loading\n    }}>\n      {children}\n    </GithubContext.Provider>\n  )\n}","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Navbar } from './components/Navbar'\nimport { Home } from './pages/Home'\nimport { Profile } from './pages/Profile'\nimport { About } from './pages/About'\nimport { Alert } from './components/Alert/Alert'\nimport { AlertState } from './context/alert/AlertState'\nimport { GithubState } from './context/github/githubState'\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: 'Teast alert' }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}